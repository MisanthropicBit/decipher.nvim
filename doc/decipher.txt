*decipher.nvim*                                         {Encode and decode text}

==============================================================================

           █▀▀▄ █▀▀▀ █▀▀▀ █ █▀▀▄ █  █ █▀▀▀ █▀▀▄   █▄ █ █  █ █ █▄ ▄█
           █  █ ██   █    █ █▄▄█ ████ ██   █▄▄█   █▀▄█ █  █ █ █ ▀ █
           █▄▄▀ █▄▄▄ █▄▄▄ █ █    █  █ █▄▄▄ █ █  ▄ █ ▀█ ▀▄▄▀ █ █   █

                               Version 1.0.0

A small plugin that provides ways to encode and decode text using various
codecs like base64.

==============================================================================
decipher                                                              *decipher*

                               `decipher.nvim`

  Setup ....................................................... |decipher.setup|
  Types ....................................................... |decipher.types|
  Functions ............................................... |decipher.functions|
  Mappings ................................................. |decipher.mappings|
  Motions ................................................... |decipher.motions|
  Highlights ............................................. |decipher.highlights|
  Codecs ..................................................... |decipher.codecs|
  FAQ ........................................................... |decipher.faq|

==============================================================================
Setup                                                           *decipher-setup*

Below decipher is set up through `decipher.setup({ ... })` with default values.
>lua
    require('decipher').setup({
        active_codecs = "all", -- Set all codecs as active and useable
        float = { -- Floating window options
            max_width = "auto", -- Auto-adjust width
            max_height = "auto", -- Auto-adjust height
            padding = 0, -- Zero padding (does not apply to title if any)
            border = { -- Floating window border
                { "╭", "FloatBorder" },
                { "─", "FloatBorder" },
                { "╮", "FloatBorder" },
                { "│", "FloatBorder" },
                { "╯", "FloatBorder" },
                { "─", "FloatBorder" },
                { "╰", "FloatBorder" },
                { "│", "FloatBorder" },
            },
            dismiss = "q", -- Key to press to dismiss the floating window
            apply = "a", -- Key to press to apply the encoding/decoding
            title = true, -- Display a title with the codec name
            title_separator = "─", -- Separator between title and result
            autoclose = true, -- Autoclose floating window if insert
                              -- mode is activated or the cursor is moved
            enter = false, -- Automatically enter the floating window if
                           -- opened
            options = { -- Options to apply to the floating window contents
                wrap = false,
            },
        },
    })
<
decipher.Config                                                *decipher.Config*

    Fields:  
        {active_codecs} `"all" | (string | decipher.Codecs)[]`
            A list of the codecs that should be active or "all" for all
            codecs. This only affects the codecs you can choose from when
            selecting a codec via the UI.

        {float} `decipher.WindowConfig`

decipher.WindowConfig                                    *decipher.WindowConfig*

    Fields:  
        {max_width} `number | "auto"`
            Maximum width of the preview floating window.

        {max_height} `number | "auto"`
            Maximum height of the preview floating window.

        {padding} `number`
            Padding around the preview contents in the floating window.

        {border} (`string | string[]`)[]
            Border around the preview floating window.

        {dismiss} `string`
            Key to press to dismiss the preview floating window when inside
            it. Used as the left-hand side in a normal map defintion.

        {apply} `string`
            Key to press to apply the encoding or decoding of the previewed
            text in the preview floating window when inside it. Used as the
            left-hand side in a normal map defintion.

        {title} `boolean`
            Whether or not to show a title in the preview floating window or
            not. If enabled, displays the codec name.

        {title_separator} `string`
            The title separator string (a single character) between the title
            and the previewed contents in the preview floating window.
            Not used if the |title| is disabled.

        {autoclose} `boolean`
            Autoclose the preview floating window if insert mode is
            entered or the cursor is moved.

        {enter} `boolean`
            Automatically enter the preview floating window when opened.

        {options} `table<string, any>`
            Buffer-local options to set for the preview floating window.
==============================================================================
Types                                                           *decipher.types*

                                                              *decipher.Options*
Fields 
{preview} `(boolean)` If true, show a preview of encoding/decoding instead.

==============================================================================
Functions                                                   *decipher.functions*

Any functions not listed here that may be accessed via the decipher module are
not considered public and are subject to change.

decipher.setup({config})                                        *decipher.setup*
    Setup global configuration for decipher. See |decipher-setup|.

decipher.version()                                            *decipher.version*
    Returns the current version as a string.

decipher.supported_codecs()                          *decipher.supported_codecs*
    Returns a list of currently supported codecs.

decipher.active_codecs()                                *decipher.active_codecs*
    Returns a list of currently active codecs as per |active_codecs| in
    `decipher.Config`.

decipher.encode({codec_name}, {value})                         *decipher.encode*
    Encode a value using a codec.

decipher.decode({codec_name}, {value})                         *decipher.decode*
    Decode a value using a codec.

decipher.encode_selection({codec_name}, {options})   *decipher.encode_selection*
    Encode a visual selection using a codec.

    Parameters:  
      • {codec_name} (`decipher.CodecArg`)
      • {options}    (`decipher.Options`)

decipher.decode_selection({codec_name}, {options})   *decipher.decode_selection*
    Decode a visual selection using a codec.

    Parameters:  
      • {codec_name} (`decipher.CodecArg`)
      • {options}    (`decipher.Options`)

decipher.encode_motion({codec_name}, {options})         *decipher.encode_motion*
    Encode using a motion and a codec.

    Parameters:  
      • {codec_name} (`decipher.CodecArg`)
      • {options}    (`decipher.Options`)

decipher.decode_motion({codec_name}, {options})         *decipher.decode_motion*
    Decode using a motion and a codec.

    Parameters:  
      • {codec_name} (`decipher.CodecArg`)
      • {options}    (`decipher.Options`)

decipher.encode_selection_prompt({options})   *decipher.encode_selection_prompt*
    Encode a visual selection using a codec. Prompts with a list of the active
    codecs.

    Parameters:  
      • {options} (`decipher.Options`)

decipher.decode_selection_prompt({options})   *decipher.decode_selection_prompt*
    Decode a visual selection using a codec. Prompts with a list of the active
    codecs.

    Parameters:  
      • {options} (`decipher.Options`)

==============================================================================
Mappings                                                     *decipher.mappings*

No mappings are provided by default except for those for floating windows. See
options {dismiss} and {apply} in *decipher.WindowConfig*.

==============================================================================
Motions                                                       *decipher.motions*

Decipher can encode and decode across a motion. The following lua code sets up
decipher to decode a text object using base64 using a preview floating window.
>lua
    local decipher = require('decipher')

    vim.keymap.set(
        'n',
        '<leader>d',
        function()
            decipher.decode_motion('base64', { preview = true })
        end,
        { noremap = true, silent = true }
    )

==============================================================================
Highlights                                                 *decipher.highlights*

*DecipherFloatTitle*
  Highlight group for the title of the floating window preview.

*DecipherFloatContents*
  Highlight group for the contents of the floating window preview.

==============================================================================
Codecs                                                         *decipher.codecs*

Currently supported codecs:

* base32
* zbase32: Variant of base32 with a different alphabet.
* crockford: Variant of base32 with a different alphabet.
* base64
* base64-url: Combination of base64 and url codecs.
* base64-url-safe: Base64-variant that is safe to include in urls.
* url

==============================================================================
FAQ                                                               *decipher.faq*

==============================================================================
License                                                       *decipher.license*

BSD 3-Clause License. Copyright © 2020 Alexander Asp Bock

 vim:tw=78:ts=8:ft=help:norl:
